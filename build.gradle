buildscript {
	ext.minecraftVersion = project.minecraft_version_1_18
	ext.minFabric = fabric_version_1_17
	ext.javaVersionShort = 17

	if (minecraftVersion.startsWith("1.14")) {
		ext.yarnMapping = project.yarn_mappings_1_14
		ext.fabricAPI = fabric_version_1_14
	} else if (minecraftVersion.startsWith("1.15")) {
		ext.yarnMapping = project.yarn_mappings_1_15
		ext.fabricAPI = fabric_version_1_15
	} else if (minecraftVersion.startsWith("1.16")) {
		ext.yarnMapping = project.yarn_mappings_1_16
		ext.fabricAPI = fabric_version_1_16
	} else if (minecraftVersion.startsWith("1.17")) {
		ext.yarnMapping = project.yarn_mappings_1_17
		ext.fabricAPI = fabric_version_1_18
	} else if (minecraftVersion.startsWith("1.18")) {
		ext.yarnMapping = project.yarn_mappings_1_18
		ext.fabricAPI = fabric_version_1_18
	} else {
		throw new IllegalStateException("unknown Minecraft version: " + minecraftVersion)
	}
}

plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

targetCompatibility = JavaVersion.VERSION_17
sourceCompatibility = targetCompatibility

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraftVersion}"
	mappings "net.fabricmc:yarn:${project.yarnMapping}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricAPI}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "archives_base_name": project.archivesBaseName,
		"version": project.version,
		"group": project.group,
		"modid": project.modid,
		"yarn_mapping": project.yarnMapping,
		"minecraft_version": project.minecraftVersion,
		"loader_version": project.loader_version,
		"fabric_version": project.fabricAPI,
		"min_fabric_version": project.minFabric,
		"source_version": project.sourceCompatibility,
		"java_version": project.targetCompatibility,
		"java_version_short": project.javaVersionShort
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = project.javaVersionShort
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
